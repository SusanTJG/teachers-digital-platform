name: unittest

on: pull_request

jobs:

  unittest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toxenv:
          - lint
          - py36-dj111-wag23
          # - py36-dj20-wag23

    services:
      postgres:
        # https://help.github.com/en/actions/configuring-and-managing-workflows/creating-postgresql-service-containers
        # https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
        image: postgres
        env:
          POSTGRES_USER: cfpb
          POSTGRES_PASSWORD: cfpb
          POSTGRES_DB: cfgov
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox isort flake8
          ./install_cfgov_refresh.sh

      - name: Run tox -e ${{ matrix.toxenv }}
        run: |
          tox -e ${{ matrix.toxenv }}
        env:
          DJANGO_SETTINGS_MODULE: teachers_digital_platform.tests.settings

      - name: Prepare test coverage
        if: matrix.toxenv == 'py36-dj111-wag23'
        run: coverage xml

      - name: Store test coverage
        # Submit coverage from our prefered tox run only
        if: matrix.toxenv == 'py36-dj111-wag23'
        uses: actions/upload-artifact@v1
        with:
          name: test_coverage
          path: ./coverage.xml

  coverage:
    runs-on: ubuntu-latest
    needs:
      - unittest

    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Retrieve test coverage
        uses: actions/download-artifact@v1
        with:
          name: test_coverage

      - name: Check test coverage
        run: |
          diff-cover test_coverage/coverage.xml --fail-under=100
